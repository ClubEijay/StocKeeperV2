@model IEnumerable<StocKeeper.Models.PurchaseOrders>

<div class="container mt-4">
    <h2>Purchase Orders</h2>

    <!-- Search and Filter Panel -->
    <div class="card mb-3">
        <div class="card-body">
            @using (Html.BeginForm("Index", "PurchaseOrder", FormMethod.Get, new { @class = "row g-3" }))
            {
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Search Order ID/Supplier</label>
                        <input type="text" name="searchString" value="@ViewBag.CurrentSearch" class="form-control" placeholder="Search..." />
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label>Status</label>
                        <select name="status" class="form-control">
                            <option value="">All Statuses</option>
                            <option value="Pending" @(ViewBag.CurrentStatus == "Pending" ? "selected" : "")>Pending</option>
                            <option value="Shipped" @(ViewBag.CurrentStatus == "Shipped" ? "selected" : "")>Shipped</option>
                            <option value="Delivered" @(ViewBag.CurrentStatus == "Delivered" ? "selected" : "")>Delivered</option>
                            <option value="Cancelled" @(ViewBag.CurrentStatus == "Cancelled" ? "selected" : "")>Cancelled</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Date From</label>
                        <input type="datetime-local" name="dateFrom" class="form-control" value="@ViewBag.DateFrom" />
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Date To</label>
                        <input type="datetime-local" name="dateTo" class="form-control" value="@ViewBag.DateTo" />
                    </div>
                </div>
                <div class="col-12">
                    <button type="submit" class="btn btn-primary">Apply Filters</button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary">Clear Filters</a>
                    @Html.ActionLink("New Purchase Order", "Create", null, new { @class = "btn btn-success float-end" })
                </div>
            }
        </div>
    </div>

    <!-- Purchase Orders Table -->
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.OrderId)</th>
                    <th>@Html.DisplayNameFor(model => model.Supplier.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.OrderDate)</th>
                    <th>@Html.DisplayNameFor(model => model.ExpectedDeliveryDate)</th>
                    <th>@Html.DisplayNameFor(model => model.TotalAmount)</th>
                    <th>@Html.DisplayNameFor(model => model.Status)</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.OrderId)</td>
                        <td>@Html.DisplayFor(modelItem => item.Supplier.Name)</td>
                        <td>@item.OrderDate.ToString("MM-dd-yyyy HH:mm")</td>
                        <td>
                            @(item.ExpectedDeliveryDate.HasValue ?
                                item.ExpectedDeliveryDate.Value.ToString("MM-dd-yyyy HH:mm") : "-")
                        </td>
                        <td>@item.TotalAmount.ToString("C")</td>
                        <td>
                            <span class="badge @(item.Status.ToLower() switch
                            {
                                "pending" => "bg-warning",
                                "shipped" => "bg-info",
                                "delivered" => "bg-success",
                                "cancelled" => "bg-danger",
                                _ => "bg-secondary"
                            })">@item.Status</span>
                        </td>
                        <td>
                            @Html.ActionLink("Details", "Details", new { id = item.OrderId }, new { @class = "btn btn-sm btn-info" })
                            @Html.ActionLink("Edit", "Edit", new { id = item.OrderId }, new { @class = "btn btn-sm" })
                            @if (item.Status.ToLower() == "pending")
                            {
                                @Html.ActionLink("Delete", "Delete", new { id = item.OrderId }, new { @class = "btn btn-sm btn-danger", onclick = "return confirm('Are you sure you want to delete this order?');" })
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>