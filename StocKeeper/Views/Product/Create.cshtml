@model StocKeeper.Models.ProductViewModel

@{
    ViewBag.Title = "Create Product";
}

<h2>Create Product</h2>

@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Product Name -->
        <div class="form-group">
            @Html.LabelFor(model => model.Product.Name, "Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Description -->
        <div class="form-group">
            @Html.LabelFor(model => model.Product.Description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Product.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Unit Price -->
        <div class="form-group">
            @Html.LabelFor(model => model.Product.UnitPrice, "Unit Price", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Current Stock -->
        <div class="form-group">
            @Html.LabelFor(model => model.Product.CurrentStock, "Current Stock", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.CurrentStock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.CurrentStock, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Minimum Stock Level -->
        <div class="form-group">
            @Html.LabelFor(model => model.Product.MinimumStockLevel, "Minimum Stock Level", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.MinimumStockLevel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.MinimumStockLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Category Dropdown -->
        <div class="form-group">
            @Html.LabelFor(model => model.Product.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Product.CategoryId, new SelectList(Model.Categories, "Value", "Text"), "-- Choose --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Product.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Supplier Dropdown -->
        <div class="form-group">
            @Html.LabelFor(model => model.Product.SupplierId, "Supplier", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Product.SupplierId, new SelectList(Model.Suppliers, "Value", "Text"), "-- Choose --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Product.SupplierId, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Submit Button -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
